---
- hosts: all
  gather_facts: no
  become: yes
  ignore_unreachable: yes
  vars:
    ansible_remote_tmp: /tmp
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    threshold_percent: 80
    playbook_name: "check-diskspace.yml"
    global_timeout: 600  # 10 minutes in seconds

  pre_tasks:
    - name: Check host connectivity
      include_tasks: 
        file: _host-connectivity-check.yml
        apply:
          vars:
            task_name: "Pre-check for Check Disk Space"

    - name: Gather facts
      setup:
      when: not host_is_unreachable | default(false)
      async: "{{ global_timeout }}"
      poll: 5

    - name: Include pre-requisite tasks
      include_tasks: _prereq_tasks.yml

  tasks:
    - name: Create disk usage parser script
      ansible.builtin.copy:
        content: |
          #!/usr/bin/env python3
          import sys
          import json

          threshold = int(sys.argv[1])
          disks_over_threshold = []

          for line in sys.stdin:
              parts = line.strip().split()
              if len(parts) == 3:
                  device, usage, mount = parts
                  usage_percent = int(usage.rstrip('%'))
                  if usage_percent > threshold:
                      disks_over_threshold.append({
                          'device': device,
                          'usage': usage_percent,
                          'mount': mount
                      })

          print(json.dumps(disks_over_threshold))
        dest: /tmp/parse_disk_usage.py
        mode: '0755'

    - name: Get disk space usage and parse
      ansible.builtin.shell: df -h | awk '{if (NR!=1) {print $1,$5,$6}}' | grep -vE '^tmpfs|^udev|^/dev/loop' | python3 /tmp/parse_disk_usage.py {{ threshold_percent }}
      register: parsed_disk_usage
      changed_when: false

    - name: Set fact for disks over threshold
      ansible.builtin.set_fact:
        disks_over_threshold: "{{ parsed_disk_usage.stdout | from_json }}"

    - name: Prepare Discord notification message
      ansible.builtin.set_fact:
        discord_message:
          embeds:
            - title: "💾 Disk Space Alert for {{ inventory_hostname }}"
              color: 15158332  # Red color
              fields:
                - name: "🖥️ Host"
                  value: "{{ inventory_hostname }}"
                  inline: true
                - name: "🚨 Threshold"
                  value: "{{ threshold_percent }}%"
                  inline: true
                - name: "🔴 Disks Over Threshold"
                  value: "{{ disks_over_threshold | length }}"
                  inline: true
              description: |-
                The following disks are over {{ threshold_percent }}% usage:

                {% for disk in disks_over_threshold %}
                **📀 Device:** `{{ disk.device }}`
                **📊 Usage:** `{{ disk.usage }}%`
                **📁 Mount:** `{{ disk.mount }}`
                
                {% endfor %}
                
                Please check and free up space if necessary.
              footer:
                text: "Report generated on {{ ansible_date_time.iso8601 }}"
      when: disks_over_threshold | length > 0

    - name: Send Discord notification
      ansible.builtin.uri:
        url: "{{ lookup('env', 'ADW_NOTIF') }}"
        method: POST
        body_format: json
        body: "{{ discord_message }}"
        status_code: [204, 200]  # Accept both 204 and 200 as success
      when: 
        - disks_over_threshold | length > 0
        - lookup('env', 'ADW_NOTIF') | length > 0
      async: "{{ global_timeout }}"
      poll: 5

    - name: Debug disk usage (always show)
      ansible.builtin.debug:
        var: disks_over_threshold
