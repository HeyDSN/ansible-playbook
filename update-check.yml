---
- hosts: all
  gather_facts: no
  become: yes
  vars:
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Check for updates (Standard systems)
      apt:
        update_cache: yes
      when: "'standard_vms' in group_names"
      register: apt_update_result

    - name: Count available updates (Standard systems)
      shell: |
        if command -v /usr/lib/update-notifier/apt-check &> /dev/null; then
          /usr/lib/update-notifier/apt-check --human-readable | grep 'packages can be updated' | cut -d ' ' -f 1
        else
          apt list --upgradable 2>/dev/null | grep -c upgradable
        fi
      register: updates_count_standard
      changed_when: false
      when: "'standard_vms' in group_names"

    - name: Check for updates (DietPi systems)
      command: dietpi-update --check
      register: dietpi_update_result
      changed_when: false
      when: "'dietpi_vms' in group_names"

    - name: Count available updates (DietPi systems)
      shell: dietpi-update --available | grep -c 'Update available'
      register: updates_count_dietpi
      changed_when: false
      when: "'dietpi_vms' in group_names"

    - name: Set fact for update count
      set_fact:
        update_count: "{{ updates_count_standard.stdout|default('0')|int if 'standard_vms' in group_names else updates_count_dietpi.stdout|default('0')|int }}"

    - name: Notify if updates are available
      debug:
        msg: "{{ update_count }} updates are available on {{ inventory_hostname }}"
      when: update_count|int > 0

    - name: Send Discord notification
      uri:
        url: "{{ lookup('env', 'DISCORD_WEBHOOK_URL') }}"
        method: POST
        body_format: json
        body:
          content: "{{ update_count }} updates are available on {{ inventory_hostname }}"
      when: 
        - update_count|int > 0
        - lookup('env', 'DISCORD_WEBHOOK_URL') | length > 0
