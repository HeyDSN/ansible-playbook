---
- hosts: all
  gather_facts: yes
  become: yes
  vars:
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Determine if system is DietPi
      stat:
        path: /boot/dietpi/.version
      register: dietpi_version_file

    - name: Check if dietpi-update exists
      command: which dietpi-update
      register: dietpi_update_check
      ignore_errors: yes
      changed_when: false

    - name: Set fact for system type
      set_fact:
        is_dietpi: "{{ dietpi_version_file.stat.exists | default(false) and dietpi_update_check.rc == 0 }}"

    - name: Check for updates (Standard systems)
      apt:
        update_cache: yes
      when: not is_dietpi
      register: apt_update_result

    - name: Get list of upgradable packages (Standard systems)
      shell: apt list --upgradable 2>/dev/null | grep -v '^Listing...'
      register: upgradable_packages
      changed_when: false
      when: not is_dietpi

    - name: Count available updates (Standard systems)
      set_fact:
        update_count: "{{ upgradable_packages.stdout_lines | length }}"
      when: not is_dietpi

    - name: Check for updates (DietPi systems)
      command: dietpi-update --check
      register: dietpi_update_result
      changed_when: false
      when: is_dietpi

    - name: Count available updates (DietPi systems)
      shell: dietpi-update --available | grep -c 'Update available'
      register: updates_count_dietpi
      changed_when: false
      when: is_dietpi

    - name: Set fact for update count (DietPi systems)
      set_fact:
        update_count: "{{ updates_count_dietpi.stdout|default('0')|int }}"
      when: is_dietpi

    - name: Set host update info
      set_fact:
        host_update_info:
          hostname: "{{ inventory_hostname }}"
          system_type: "{{ 'DietPi' if is_dietpi else 'Standard' }}"
          update_count: "{{ update_count|int }}"
          upgradable_packages: "{{ upgradable_packages.stdout_lines|default([]) }}"

    - name: Collect update info
      set_fact:
        all_hosts_update_info: "{{ all_hosts_update_info|default([]) + [host_update_info] }}"

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Prepare combined Discord notification message
      set_fact:
        discord_message:
          embeds:
            - title: "System Updates Available"
              color: 15158332  # Red color
              fields: >
                {% for host in all_hosts_update_info %}
                {% if host.update_count > 0 %}
                  - name: "{{ host.hostname }} ({{ host.system_type }})"
                    value: "{{ host.update_count }} updates available"
                    inline: true
                {% endif %}
                {% endfor %}
              description: >
                {% for host in all_hosts_update_info %}
                {% if host.update_count > 0 %}
                **{{ host.hostname }} ({{ host.system_type }}):**
                {% if host.system_type == 'Standard' %}
                ```
                {% for package in host.upgradable_packages %}
                {{ package }}

                {% endfor %}
                ```
                {% else %}
                DietPi updates available. Please run `dietpi-update` manually for details.
                {% endif %}

                {% endif %}
                {% endfor %}

    - name: Send combined Discord notification
      uri:
        url: "{{ lookup('env', 'DISCORD_WEBHOOK_URL') }}"
        method: POST
        body_format: json
        body: "{{ discord_message }}"
        status_code: [204, 200]  # Accept both 204 and 200 as success
      when: 
        - all_hosts_update_info | selectattr('update_count', 'gt', 0) | list | length > 0
        - lookup('env', 'DISCORD_WEBHOOK_URL') | length > 0

    - name: Debug - Show combined notification message
      debug:
        var: discord_message
      when: all_hosts_update_info | selectattr('update_count', 'gt', 0) | list | length > 0
