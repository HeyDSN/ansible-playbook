---
- hosts: all
  gather_facts: yes
  become: yes
  vars:
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
    - name: Check for updates
      apt:
        update_cache: yes
      register: apt_update_result

    - name: Get list of held packages
      shell: apt-mark showhold
      register: held_packages
      changed_when: false

    - name: Get list of upgradable packages (excluding held packages)
      shell: |
        apt list --upgradable 2>/dev/null | grep -v '^Listing...' | cut -d'/' -f1 | while read pkg; do
          if ! echo "{{ held_packages.stdout_lines | join(' ') }}" | grep -q "$pkg"; then
            apt list --upgradable 2>/dev/null | grep "^$pkg/"
          fi
        done
      register: upgradable_packages
      changed_when: false

    - name: Count available updates
      set_fact:
        update_count: "{{ upgradable_packages.stdout_lines | length }}"

    - name: Prepare Discord notification message
      set_fact:
        discord_message:
          embeds:
            - title: "🔄 Update Check for {{ inventory_hostname }}"
              color: "{{ '15158332' if update_count|int > 0 else '3066993' }}"  # Red if updates, Green if no updates
              fields:
                - name: "🖥️ Host"
                  value: "{{ inventory_hostname }}"
                  inline: true
                - name: "📦 Updates Available"
                  value: "{{ update_count }}"
                  inline: true
              description: |-
                {% if upgradable_packages.stdout_lines | length > 0 %}
                **📋 Upgradable packages:**
                ```
                {% for package in upgradable_packages.stdout_lines %}
                • {{ package | regex_replace('^(\\S+).*$', '\\1') }}
                
                {% endfor %}
                ```
                {% else %}
                **✅ System is up to date!**
                {% endif %}
                {% if held_packages.stdout_lines | length > 0 %}
                **🔒 Held packages (excluded from update):**
                ```
                {% for package in held_packages.stdout_lines %}
                • {{ package }}
                {% endfor %}
                ```
                {% else %}
                **🔓 No packages are being held back.**
                {% endif %}
      when: update_count|int > 0

    - name: Send Discord notification
      uri:
        url: "{{ lookup('env', 'DISCORD_WEBHOOK_URL') }}"
        method: POST
        body_format: json
        body: "{{ discord_message }}"
        status_code: [204, 200]  # Accept both 204 and 200 as success
      when: 
        - update_count|int > 0
        - lookup('env', 'DISCORD_WEBHOOK_URL') | length > 0

    - name: Notify if updates are available (Debug)
      debug:
        var: discord_message
      when: update_count|int > 0
