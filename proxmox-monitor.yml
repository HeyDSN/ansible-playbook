---
- name: Proxmox Performance Monitoring
  hosts: proxmox_node
  become: yes
  vars:
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    discord_webhook: "{{ lookup('env', 'ADW_PROXMOX') }}"
    cpu_threshold: 10
    memory_threshold: 10
    storage_threshold: 10

  tasks:
    - name: Collect system-wide performance metrics
      shell: |
        echo "CPU Usage: $(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')%"
        echo "Memory Usage: $(free | grep Mem | awk '{print $3/$2 * 100.0}')%"
        echo "Storage Usage: $(df -h / | awk '/\// {print $5}')"
      register: system_metrics

    - name: Collect VM metrics
      shell: |
        echo "Virtual Machines:"
        qm list | tail -n +2 | while read vm; do
          vmid=$(echo $vm | awk '{print $1}')
          name=$(echo $vm | awk '{print $2}')
          status=$(echo $vm | awk '{print $3}')
          if [ "$status" = "running" ]; then
            if [ -f "/var/run/qemu-server/${vmid}.pid" ]; then
              pid=$(cat "/var/run/qemu-server/${vmid}.pid")
              vm_stats=$(top -b -n1 -p $pid | tail -n 1)
              cpu=$(echo $vm_stats | awk '{print $9}')
              mem=$(echo $vm_stats | awk '{print $10}')
              printf "• %s (ID: %s) CPU: %.1f%%, Mem: %.1f%%\n" "$name" "$vmid" $cpu $mem
            else
              echo "• $name (ID: $vmid) - PID file not found"
            fi
          fi
        done
      register: vm_metrics

    - name: Collect LXC metrics
      shell: |
        echo "LXC Containers:"
        pct list | tail -n +2 | while read ct; do
          ctid=$(echo $ct | awk '{print $1}')
          name=$(echo $ct | awk '{print $3}')
          status=$(echo $ct | awk '{print $2}')
          if [ "$status" = "running" ]; then
            cpu=$(pct exec $ctid -- top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
            mem=$(pct exec $ctid -- free | grep Mem | awk '{print $3/$2 * 100.0}')
            printf "• %s (ID: %s) CPU: %.1f%%, Mem: %.1f%%\n" "$name" "$ctid" $cpu $mem
          fi
        done
      register: lxc_metrics

    - name: Generate alerts
      set_fact:
        alerts: |
          {% set alert_list = [] %}

          # {% set parts1 = system_metrics.stdout_lines[0].split(' ') %}
          # {% set scpu = parts1[3] | regex_replace('%$', '') | float %}
          # {% if scpu > cpu_threshold %}
          #   {% set _ = alert_list.append('🔴 High System CPU: ' ~ scpu | round(2) ~ '%') %}
          # {% endif %}
          
          # {% set parts2 = system_metrics.stdout_lines[1].split(' ') %}
          # {% set smem = parts2[3] | regex_replace('%$', '') | float %}
          # {% if smem > memory_threshold %}
          #   {% set _ = alert_list.append('🟠 High System Memory: ' ~ smem | round(2) ~ '%') %}
          # {% endif %}

          # {% set parts3 = system_metrics.stdout_lines[2].split(' ') %}
          # {% set sstorage = parts3[3] | regex_replace('%$', '') | float %}
          # {% if sstorage > storage_threshold %}
          #   {% set _ = alert_list.append('🟡 High System Storage: ' ~ sstorage ~ '%') %}
          # {% endif %}

          {% for line in vm_metrics.stdout_lines + lxc_metrics.stdout_lines %}
            {% if line.startswith('•') %}
              {% set parts = line.split(' ') %}
              {% set name = parts[1] %}
              {% set id = parts[3] | regex_replace('[()]', '') %}
              {% set cpu = parts[5] | regex_replace('%,$', '') | float %}
              {% set mem = parts[7] | regex_replace('%$', '') | float %}
              {% if cpu > cpu_threshold %}
                {% set _ = alert_list.append('🔴 High CPU: ' ~ name ~ ' ' ~ id ~ ' (' ~ cpu | round(2) ~ '%)') %}
              {% endif %}
              {% if mem > memory_threshold %}
                {% set _ = alert_list.append('🟠 High Mem: ' ~ name ~ ' ' ~ id ~ ' (' ~ mem | round(2) ~ '%)') %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {% if alert_list | length > 0 %}
          {{ alert_list | sort | join('\n') }}
          {% else %}
          ✅ No alerts at this time.
          {% endif %}

    - name: Generate performance report
      set_fact:
        performance_report:
          embeds:
            - title: "📊 Proxmox Performance Report"
              color: 3066993
              fields:
                - name: "🖥️ System Metrics"
                  value: "{{ system_metrics.stdout_lines[0] }}"
                - name: "💻 Virtual Machines"
                  value: "{{ vm_metrics.stdout_lines | select('match', '^•.*') | join('\n') }}"
                - name: "📦 LXC Containers"
                  value: "{{ lxc_metrics.stdout_lines | select('match', '^•.*') | join('\n') }}"
                - name: "⚠️ Alerts"
                  value: "{{ alerts | trim | replace('\\n', '\n') }}"
              footer:
                text: "Report generated on {{ ansible_date_time.iso8601 }}"

    - name: Send Discord notification
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body: "{{ performance_report }}"
        status_code: [204, 200]
      when: discord_webhook | length > 0

    - name: Display performance report (Debug)
      debug:
        var: performance_report
