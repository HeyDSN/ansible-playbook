---
- name: Proxmox Performance Monitoring
  hosts: proxmox_node
  become: yes
  vars:
    ansible_ssh_args: '-o ControlMaster=no -o ControlPersist=no'
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    discord_webhook: "{{ lookup('env', 'ADW_PROXMOX') }}"
    cpu_threshold: 10
    memory_threshold: 10
    storage_threshold: 10

  tasks:
    - name: Collect system-wide performance metrics
      shell: |
        echo "CPU Usage: $(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')%"
        echo "Memory Usage: $(free | grep Mem | awk '{print $3/$2 * 100.0}')%"
        echo "Storage Usage: $(df -h / | awk '/\// {print $5}')"
      register: system_metrics

    - name: Collect VM and LXC metrics
      shell: |
        echo "Virtual Machines and LXC Containers:"
        qm list | tail -n +2 | while read instance; do
          id=$(echo $instance | awk '{print $1}')
          name=$(echo $instance | awk '{print $2}')
          status=$(echo $instance | awk '{print $3}')
          if [ "$status" = "running" ]; then
            if [ -f "/var/run/qemu-server/${id}.pid" ]; then
              pid=$(cat "/var/run/qemu-server/${id}.pid")
              stats=$(top -b -n1 -p $pid | tail -n 1)
              cpu=$(echo $stats | awk '{print $9}')
              mem=$(echo $stats | awk '{print $10}')
            else
              stats=$(pct exec $id -- top -bn1)
              cpu=$(echo "$stats" | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
              mem=$(echo "$stats" | grep "Mem:" | awk '{print $3/$2 * 100.0}')
            fi
            printf "• %s (ID: %s) CPU: %.1f%%, Mem: %.1f%%\n" "$name" "$id" $cpu $mem
          fi
        done
      register: instance_metrics

    - name: Calculate alerts
      set_fact:
        alerts: |
          {% set alert_list = [] %}
          {% set cpu = system_metrics.stdout_lines[0] | regex_search('([0-9.]+)%') | first | float %}
          {% set mem = system_metrics.stdout_lines[1] | regex_search('([0-9.]+)%') | first | float %}
          {% set storage = system_metrics.stdout_lines[2] | regex_search('([0-9]+)%') | first | int %}
          {% if cpu > cpu_threshold %}
            {% set _ = alert_list.append('🔴 High System CPU: ' ~ cpu | round(2) ~ '%') %}
          {% endif %}
          {% if mem > memory_threshold %}
            {% set _ = alert_list.append('🟠 High System Memory: ' ~ mem | round(2) ~ '%') %}
          {% endif %}
          {% if storage > storage_threshold %}
            {% set _ = alert_list.append('🟡 High System Storage: ' ~ storage ~ '%') %}
          {% endif %}
          {% for line in instance_metrics.stdout_lines %}
            {% if line.startswith('•') %}
              {% set parts = line.split(' ') %}
              {% set name = parts[1] %}
              {% set id = parts[3] | regex_replace('[()]', '') %}
              {% set cpu = parts[5] | regex_replace('%$', '') | float %}
              {% set mem = parts[7] | regex_replace('%$', '') | float %}
              {% if cpu > cpu_threshold %}
                {% set _ = alert_list.append('🔴 High CPU: ' ~ name ~ ' ' ~ id ~ ' (' ~ cpu | round(2) ~ '%)') %}
              {% endif %}
              {% if mem > memory_threshold %}
                {% set _ = alert_list.append('🟠 High Mem: ' ~ name ~ ' ' ~ id ~ ' (' ~ mem | round(2) ~ '%)') %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ alert_list | sort | join('\n') }}

    - name: Generate performance report
      set_fact:
        performance_report:
          embeds:
            - title: "📊 Proxmox Performance Report"
              color: 3066993
              fields:
                - name: "🖥️ System Metrics"
                  value: "{{ system_metrics.stdout }}"
                - name: "💻 Virtual Machines and LXC Containers"
                  value: "{{ instance_metrics.stdout_lines | select('match', '^•.*') | join('\n') }}"
                - name: "⚠️ Alerts"
                  value: "{{ alerts if alerts | trim != '' else '✅ No alerts at this time.' }}"
              footer:
                text: "Report generated on {{ ansible_date_time.iso8601 }}"

    - name: Send Discord notification
      uri:
        url: "{{ discord_webhook }}"
        method: POST
        body_format: json
        body: "{{ performance_report }}"
        status_code: [204, 200]
      when: discord_webhook | length > 0

    - name: Display performance report (Debug)
      debug:
        var: performance_report
