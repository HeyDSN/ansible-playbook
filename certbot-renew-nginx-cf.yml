---
- name: Renew Let's Encrypt certificates on multiple hosts
  hosts: all
  become: true
  ignore_unreachable: yes
  vars:
    discord_webhook_url: "{{ lookup('env', 'ADW_CERTBOT') }}"
    certbot_log_file: "/var/log/letsencrypt/letsencrypt.log"
    certbot_temp_log: "/tmp/certbot.log"

  pre_tasks:
    - name: Skip hosts not using Let's Encrypt
      meta: end_host
      when: not (letsencrypt | default(false))

  tasks:
    - name: Ensure letsencrypt log directory exists
      file:
        path: /var/log/letsencrypt
        state: directory
        mode: "0755"

    - name: Clear existing Certbot log file
      file:
        path: "{{ certbot_log_file }}"
        state: absent

    - name: Renew Let's Encrypt certificates (with retries and full logging)
      shell: |
        set -o pipefail
        for i in {1..3}; do
          certbot renew --dns-cloudflare --non-interactive -v 2>&1 | tee "{{ certbot_temp_log }}" && break
          echo "Renewal attempt $i failed. Retrying in 60 seconds..." >&2
          sleep 60
        done
      args:
        executable: /bin/bash
      register: certbot_result
      changed_when: "'Congratulations' in certbot_result.stdout or 'successfully renewed' in certbot_result.stdout"

    - name: Print certbot log to Semaphore log
      shell: cat "{{ certbot_temp_log }}"
      register: full_log
      changed_when: false

    - name: Reload nginx if certificates were renewed
      shell: |
        nginx -t && nginx -s reload && systemctl start nginx
      when: "'Congratulations' in certbot_result.stdout or 'successfully renewed' in certbot_result.stdout"

    - name: Extract renewed domains from log
      set_fact:
        renewed_domains: "{{ (full_log.stdout_lines | select('match', '^Renewing an existing certificate for') | list | join('\n')) | default('No domains found') }}"

    - name: Send Discord webhook notification for successful renewal
      uri:
        url: "{{ discord_webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: >
          {
            "embeds": [{
              "title": ":white_check_mark: Let's Encrypt Renewal Successful",
              "description": "Certificate was renewed successfully on `{{ inventory_hostname }}`",
              "color": 3066993,
              "fields": [
                {
                  "name": "Renewed Domains",
                  "value": "{{ renewed_domains }}"
                },
                {
                  "name": "Log (truncated)",
                  "value": "{{ full_log.stdout | truncate(1800, True, '...') }}"
                }
              ],
              "timestamp": "{{ ansible_date_time.iso8601 }}"
            }]
          }
      when: "'Congratulations' in certbot_result.stdout or 'successfully renewed' in certbot_result.stdout"

    - name: Remove temporary certbot log
      file:
        path: "{{ certbot_temp_log }}"
        state: absent
